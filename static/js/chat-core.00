// chat-core.js

// === VARIABLES Y CONSTANTES ===
let messageCount = 0;
const MAX_MESSAGES_BEFORE_HELP = 5;
let chatOpened = false;

// === FORMATEAR MENSAJES ===
function formatMessage(message) {
  const containsHTML = /<\/?[a-z][\s\S]*>/i.test(message);
  if (containsHTML) return message;

  return message
    .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
    .replace(/(\d+\.\s+[^\n]+)(?=\n|$)/g, '<p class="step">$1</p>')
    .replace(/\-\s+([^\n]+)(?=\n|$)/g, '<p class="bullet-point">$1</p>')
    .replace(/\n/g, '<br>');
}

// === AGREGAR MENSAJE AL CHAT ===
function addMessage(message, isUser = false) {
  const messagesDiv = document.getElementById('chat-messages');
  const messageDiv = document.createElement('div');
  messageDiv.className = `message ${isUser ? 'user-message' : 'bot-message'}`;

  const formattedMessage = formatMessage(message);

  messageDiv.innerHTML = isUser
    ? formattedMessage
    : `
      <div class="bot-message-content">
        <div>
          <img src="../static/assets/lock-up-bot-icon.svg" alt="Bot" class="bot-icon">
        </div>
        <div class="bot-formatted-message">
          <div>${formattedMessage}</div>
        </div>
      </div>`;

  messagesDiv.appendChild(messageDiv);
  messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

// === ENVIAR MENSAJE ===
function sendMessage() {
  const input = document.getElementById('user-input');
  const message = input.value.trim();
  if (!message) return;

  addMessage(message, true);
  input.value = '';
  messageCount++;

  const humanContactKeywords = [
    "human", "person", "agent", "representative", "speak to someone",
    "talk to someone", "real person", "customer service", "speak with a human",
    "talk with a human", "manager", "help desk", "not helpful",
    "can't help", "useless", "frustrated", "annoyed", "speak to a manager"
  ];

  const wantsHumanContact = humanContactKeywords.some(keyword =>
    message.toLowerCase().includes(keyword)
  );

  if (wantsHumanContact) {
    setTimeout(() => {
      addMessage("I understand you'd like to speak with a human representative. If you need personal assistance, feel free to reach out to our team directly at 866-327-5625 or reservations@thelockup.com.", false);
    }, 500);
    messageCount = 0;
    return;
  }

  if (messageCount >= MAX_MESSAGES_BEFORE_HELP) {
    setTimeout(() => {
      addMessage("I notice we've been chatting for a while. If you need personal assistance, feel free to reach out to our team directly at 866-327-5625 or reservations@thelockup.com.", false);
      messageCount = 0;
    }, 1000);
  }

  fetch('/chat', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ message })
  })
    .then(response => {
      if (!response.ok) throw new Error('Server error');
      return response.json();
    })
    .then(data => addMessage(data.response))
    .catch(() => addMessage('Sorry, there was an error processing your message.'));
}

// === CONFIGURAR ENTER PARA ENVIAR ===
function setupEnterKeySubmission() {
  let isSending = false;

  document.addEventListener('keydown', function (e) {
    if (e.key === 'Enter' && document.activeElement.id === 'user-input') {
      e.preventDefault();
      if (isSending) return;
      isSending = true;
      sendMessage();
      setTimeout(() => { isSending = false; }, 500);
    }
  });
}

// === MENSAJE DE BIENVENIDA ===
function showWelcomeMessage() {
  if (chatOpened) return;
  addMessage(`Hello, welcome to The Lock Up Self Storage! How can I assist you today?\n- What storage unit sizes are available?\n- How much does a unit cost?\n- What are your office hours?`, false);
  chatOpened = true;
}

// === EXPORTACIONES (si se usa ES Modules) ===
// export { sendMessage, addMessage, setupEnterKeySubmission, showWelcomeMessage };
